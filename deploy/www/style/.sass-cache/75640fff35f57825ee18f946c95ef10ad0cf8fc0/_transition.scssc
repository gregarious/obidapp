3.1.20 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;i:@imported_filename"shared;0;	[ :@options{ o:Sass::Tree::CommentNode:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i:
@loud0;	[ ;@:@silenti o:Sass::Tree::VariableNode:@guarded"!default;i:
@name" default-transition-property:
@expro:Sass::Script::String	;"all;i:
@type:identifier;@;	[ ;@o;;"!default;i;" default-transition-duration;o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units["s:@original"1s;@;	[ ;@o;;"!default;i;" default-transition-function;o:Sass::Script::Bool;F;i;@;	[ ;@o;;"!default;i;"default-transition-delay;o;;F;i;@;	[ ;@o;;"!default;i;"#transitionable-prefixed-values;o:Sass::Script::List	;[o;	;"transform;i;;;@o;	;"transform-origin;i;;;@;i:@separator:
comma;@;	[ ;@o;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;0;	[ ;@;i o:Sass::Tree::MixinDefNode;T;i0;"transition-property;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:
@linei1:@operand2o:Sass::Script::String	:@value"string;i1:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;i1:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;i1;"property-1;@	:@underscored_name"property_1;@	;@	0[o:Sass::Tree::VariableNode:@guarded0;i1;"property-1:
@expro;
;i1;"unquote;{ ;[o;	;i1;"property-1;@	;"property_1;@	:@children[ ;@	o;;0;i2;"properties;o:Sass::Script::Funcall
;i2;"compact:@keywords{ :
@args[o:Sass::Script::Variable	;i2;"property-1;@:@underscored_name"property_1o;%	;i2;"property-2;@;&"property_2o;%	;i2;"property-3;@;&"property_3o;%	;i2;"property-4;@;&"property_4o;%	;i2;"property-5;@;&"property_5o;%	;i2;"property-6;@;&"property_6o;%	;i2;"property-7;@;&"property_7o;%	;i2;"property-8;@;&"property_8o;%	;i2;"property-9;@;&"property_9o;%	;i2;"property-10;@;&"property_10;@;	[ ;@u;!¼[o:Sass::Script::Variable	:
@linei3:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
;i3;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"-webkit;i3:
@type:identifier;@o; 	;i3;"properties;@;	"properties;@;i3:@prop_syntax:new;[" -webkit-transition-property:@children[ ;@u;!¸[o:Sass::Script::Variable	:
@linei4:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
;i4;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"	-moz;i4:
@type:identifier;@o; 	;i4;"properties;@;	"properties;@;i4:@prop_syntax:new;["-moz-transition-property:@children[ ;@u;!°[o:Sass::Script::Variable	:
@linei5:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
;i5;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"-o;i5:
@type:identifier;@o; 	;i5;"properties;@;	"properties;@;i5:@prop_syntax:new;["-o-transition-property:@children[ ;@o:Sass::Tree::PropNode:
@tabsi ;o;%	;i6;"properties;@;&"properties;i6:@prop_syntax:new;["transition-property;	[ ;@;$[[o;%;"property-1;@;&"property_1o;%	;i&;" default-transition-property;@;&" default_transition_property[o;%;"property-2;@;&"property_2o;;F;i';@[o;%;"property-3;@;&"property_3o;;F;i(;@[o;%;"property-4;@;&"property_4o;;F;i);@[o;%;"property-5;@;&"property_5o;;F;i*;@[o;%;"property-6;@;&"property_6o;;F;i+;@[o;%;"property-7;@;&"property_7o;;F;i,;@[o;%;"property-8;@;&"property_8o;;F;i-;@[o;%;"property-9;@;&"property_9o;;F;i.;@[o;%;"property-10;@;&"property_10o;;F;i/;@;@o;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;0;	[ ;@;i o; ;T;iH;"transition-duration;	[u;!Í[o:Sass::Script::Operation
:
@lineiI:@operand2o:Sass::Script::String	:@value"string;iI:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;iI:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iI;"duration-1;@	:@underscored_name"duration_1;@	;@	0[o:Sass::Tree::VariableNode:@guarded0;iI;"duration-1:
@expro;
;iI;"unquote;{ ;[o;	;iI;"duration-1;@	;"duration_1;@	:@children[ ;@	o;;0;iJ;"durations;o;"
;iJ;"compact;#{ ;$[o;%	;iJ;"duration-1;@;&"duration_1o;%	;iJ;"duration-2;@;&"duration_2o;%	;iJ;"duration-3;@;&"duration_3o;%	;iJ;"duration-4;@;&"duration_4o;%	;iJ;"duration-5;@;&"duration_5o;%	;iJ;"duration-6;@;&"duration_6o;%	;iJ;"duration-7;@;&"duration_7o;%	;iJ;"duration-8;@;&"duration_8o;%	;iJ;"duration-9;@;&"duration_9o;%	;iJ;"duration-10;@;&"duration_10;@;	[ ;@o:Sass::Tree::MixinNode;iM;"experimental;#{ ;	[ ;$[o;	;"transition-duration;iK;;;@o;%	;iK;"durations;@;&"durationso;	;"	-moz;iL;;;@o;	;"-webkit;iL;;;@o;	;"-o;iL;;;@o:!Sass::Script::UnaryOperation	:@operando;	;"-ms;iL;;;@;iL:@operator:not;@o;,	;-o;	;"-khtml;iL;;;@;iL;.;/;@o;	;"official;iL;;;@;@;$[[o;%;"duration-1;@;&"duration_1o;%	;i>;" default-transition-duration;@;&" default_transition_duration[o;%;"duration-2;@;&"duration_2o;;F;i?;@[o;%;"duration-3;@;&"duration_3o;;F;i@;@[o;%;"duration-4;@;&"duration_4o;;F;iA;@[o;%;"duration-5;@;&"duration_5o;;F;iB;@[o;%;"duration-6;@;&"duration_6o;;F;iC;@[o;%;"duration-7;@;&"duration_7o;;F;iD;@[o;%;"duration-8;@;&"duration_8o;;F;iE;@[o;%;"duration-9;@;&"duration_9o;;F;iF;@[o;%;"duration-10;@;&"duration_10o;;F;iG;@;@o;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;0;	[ ;@;i o; ;T;i`;"transition-timing-function;	[o;;0;ia;"function-1;o;"
;ia;"unquote;#{ ;$[o;%	;ia;"function-1;@;&"function_1;@;	[ ;@o;;0;ib;"functions;o;"
;ib;"compact;#{ ;$[o;%	;ib;"function-1;@;&"function_1o;%	;ib;"function-2;@;&"function_2o;%	;ib;"function-3;@;&"function_3o;%	;ib;"function-4;@;&"function_4o;%	;ib;"function-5;@;&"function_5o;%	;ib;"function-6;@;&"function_6o;%	;ib;"function-7;@;&"function_7o;%	;ib;"function-8;@;&"function_8o;%	;ib;"function-9;@;&"function_9o;%	;ib;"function-10;@;&"function_10;@;	[ ;@o;+;ie;"experimental;#{ ;	[ ;$[o;	;"transition-timing-function;ic;;;@o;%	;ic;"functions;@;&"functionso;	;"	-moz;id;;;@o;	;"-webkit;id;;;@o;	;"-o;id;;;@o;,	;-o;	;"-ms;id;;;@;id;.;/;@o;,	;-o;	;"-khtml;id;;;@;id;.;/;@o;	;"official;id;;;@;@;$[[o;%;"function-1;@;&"function_1o;%	;iV;" default-transition-function;@;&" default_transition_function[o;%;"function-2;@;&"function_2o;;F;iW;@[o;%;"function-3;@;&"function_3o;;F;iX;@[o;%;"function-4;@;&"function_4o;;F;iY;@[o;%;"function-5;@;&"function_5o;;F;iZ;@[o;%;"function-6;@;&"function_6o;;F;i[;@[o;%;"function-7;@;&"function_7o;;F;i\;@[o;%;"function-8;@;&"function_8o;;F;i];@[o;%;"function-9;@;&"function_9o;;F;i^;@[o;%;"function-10;@;&"function_10o;;F;i_;@;@o;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;0;	[ ;@;i o; ;T;iw;"transition-delay;	[u;!¾[o:Sass::Script::Operation
:
@lineix:@operand2o:Sass::Script::String	:@value"string;ix:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;ix:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;ix;"delay-1;@	:@underscored_name"delay_1;@	;@	0[o:Sass::Tree::VariableNode:@guarded0;ix;"delay-1:
@expro;
;ix;"unquote;{ ;[o;	;ix;"delay-1;@	;"delay_1;@	:@children[ ;@	o;;0;iy;"delays;o;"
;iy;"compact;#{ ;$[o;%	;iy;"delay-1;@;&"delay_1o;%	;iy;"delay-2;@;&"delay_2o;%	;iy;"delay-3;@;&"delay_3o;%	;iy;"delay-4;@;&"delay_4o;%	;iy;"delay-5;@;&"delay_5o;%	;iy;"delay-6;@;&"delay_6o;%	;iy;"delay-7;@;&"delay_7o;%	;iy;"delay-8;@;&"delay_8o;%	;iy;"delay-9;@;&"delay_9o;%	;iy;"delay-10;@;&"delay_10;@;	[ ;@o;+;i|;"experimental;#{ ;	[ ;$[o;	;"transition-delay;iz;;;@o;%	;iz;"delays;@;&"delayso;	;"	-moz;i{;;;@o;	;"-webkit;i{;;;@o;	;"-o;i{;;;@o;,	;-o;	;"-ms;i{;;;@;i{;.;/;@o;,	;-o;	;"-khtml;i{;;;@;i{;.;/;@o;	;"official;i{;;;@;@;$[[o;%;"delay-1;@;&"delay_1o;%	;im;"default-transition-delay;@;&"default_transition_delay[o;%;"delay-2;@;&"delay_2o;;F;in;@[o;%;"delay-3;@;&"delay_3o;;F;io;@[o;%;"delay-4;@;&"delay_4o;;F;ip;@[o;%;"delay-5;@;&"delay_5o;;F;iq;@[o;%;"delay-6;@;&"delay_6o;;F;ir;@[o;%;"delay-7;@;&"delay_7o;;F;is;@[o;%;"delay-8;@;&"delay_8o;;F;it;@[o;%;"delay-9;@;&"delay_9o;;F;iu;@[o;%;"delay-10;@;&"delay_10o;;F;iv;@;@o;;["*/* Transition all-in-one shorthand */;i;0;	[ ;@;i o; ;T;i;"single-transition;	[o;+;i;"transition;#{ ;	[ ;$[o;"
;i;"compact;#{ ;$[o;	;[	o;%	;i;"property;@;&"propertyo;%	;i;"duration;@;&"durationo;%	;i;"function;@;&"functiono;%	;i;"
delay;@;&"
delay;i;:
space;@;@;@;$[	[o;%;"property;@;&"propertyo;%	;i};" default-transition-property;@;&" default_transition_property[o;%;"duration;@;&"durationo;%	;i~;" default-transition-duration;@;&" default_transition_duration[o;%;"function;@;&"functiono;%	;i;" default-transition-function;@;&" default_transition_function[o;%;"
delay;@;&"
delayo;%	;i;"default-transition-delay;@;&"default_transition_delay;@o; ;T;i;"transition;	[u;!î[o:Sass::Script::Operation
:
@linei:@operand2o:Sass::Script::String	:@value"default;i:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Variable	;i:
@name"transition-1;@	:@underscored_name"transition_1;@	0[o:Sass::Tree::VariableNode:@guarded0;i;"transition-1:
@expro:Sass::Script::Funcall
;i;"compact:@keywords{ :
@args[o:Sass::Script::List	;	[	o;	;i;" default-transition-property;@	;" default_transition_propertyo;	;i;" default-transition-duration;@	;" default_transition_durationo;	;i;" default-transition-function;@	;" default_transition_functiono;	;i;"default-transition-delay;@	;"default_transition_delay;i:@separator:
space;@	;@	:@children[ ;@	o;;0;i;"transitions;o;;F;i;@;	[ ;@u;!g[o:Sass::Script::Operation
:
@linei:@operand2o; 
;i;o:Sass::Script::String	:@value"	list;i:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;i:
@name"type-of:@keywords{ :
@args[o;
;i;"nth;{ ;[o:Sass::Script::Variable	;i;"transition-1;@
:@underscored_name"transition_1o:Sass::Script::Number:@denominator_units[ ;	i;i:@numerator_units[ :@original"1;@
;@
;@
;@
;:and;o; 
;i;o;	;	"	list;i;
;;@
;;;o;
;i;"type-of;{ ;[o;	;i;"transition-1;@
;"transition_1;@
;@
;@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@linei:
@name"transitions:
@expro:Sass::Script::Funcall
;i;"compact:@keywords{ :
@args[o:Sass::Script::Variable	;i;"transition-1:@options{ :@underscored_name"transition_1o;	;i;"transition-2;@;"transition_2o;	;i;"transition-3;@;"transition_3o;	;i;"transition-4;@;"transition_4o;	;i;"transition-5;@;"transition_5o;	;i;"transition-6;@;"transition_6o;	;i;"transition-7;@;"transition_7o;	;i;"transition-8;@;"transition_8o;	;i;"transition-9;@;"transition_9o;	;i;"transition-10;@;"transition_10;@:@children[ ;@[o:Sass::Tree::VariableNode:@guarded0;i;"transitions:
@expro;
;i;"	join;{ ;[o;	;i;"transition-1;@
;"transition_1o;
;i;"compact;{ ;[o;	;i;"transition-2;@
;"transition_2o;	;i;"transition-3;@
;"transition_3o;	;i;"transition-4;@
;"transition_4o;	;i;"transition-5;@
;"transition_5o;	;i;"transition-6;@
;"transition_6o;	;i;"transition-7;@
;"transition_7o;	;i;"transition-8;@
;"transition_8o;	;i;"transition-9;@
;"transition_9o;	;i;"transition-10;@
;"transition_10;@
o;	;	"
comma;i;
;;@
;@
:@children[ ;@
o;;0;i;"delays;o;"
;i;"comma-list;#{ ;$[ ;@;	[ ;@o;;0;i;"has-delays;o;;F;i;@;	[ ;@o;;0;i;"webkit-value;o;"
;i;"comma-list;#{ ;$[ ;@;	[ ;@o;;0;i;"moz-value;o;"
;i;"comma-list;#{ ;$[ ;@;	[ ;@o;;0;i;"o-value;o;"
;i;"comma-list;#{ ;$[ ;@;	[ ;@o;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;0;	[ ;@;i o:Sass::Tree::EachNode;T:
@listo;%	;i¢;"transitions;@;&"transitions;i¢;	[o;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;0;	[ ;@;i o;;0;i¥;"property;o;"
;i¥;"nth;#{ ;$[o;%	;i¥;"transition;@;&"transitiono;;[ ;i;i¥;[ ;"1;@;@;	[ ;@o;;0;i¦;"duration;o;;F;i¦;@;	[ ;@o;;0;i§;"timing-function;o;;F;i§;@;	[ ;@o;;0;i¨;"
delay;o;;F;i¨;@;	[ ;@u;!
[o:Sass::Script::Operation
:
@linei©:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i©:@numerator_units[ :@original"1:@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
;i©:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;i©;"transition;@:@underscored_name"transition;@;@0[o:Sass::Tree::VariableNode:@guarded0;i©;"duration:
@expro;
;i©;"nth;{ ;[o;	;i©;"transition;@;"transitiono;;	@;
i;i©;[ ;"2;@;@:@children[ ;@u;![o:Sass::Script::Operation
:
@lineiª:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;iª:@numerator_units[ :@original"2:@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
;iª:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;iª;"transition;@:@underscored_name"transition;@;@0[o:Sass::Tree::VariableNode:@guarded0;iª;"timing-function:
@expro;
;iª;"nth;{ ;[o;	;iª;"transition;@;"transitiono;;	@;
i;iª;[ ;"3;@;@:@children[ ;@u;!M[o:Sass::Script::Operation
:
@linei«:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i«:@numerator_units[ :@original"3:@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
;i«:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;i«;"transition;@:@underscored_name"transition;@;@0[o:Sass::Tree::VariableNode:@guarded0;i«;"
delay:
@expro;
;i«;"nth;{ ;[o;	;i«;"transition;@;"transitiono;;	@;
i	;i«;[ ;"4;@;@:@children[ ;@o;;0;i«;"has-delays;o:Sass::Script::Bool;
T;i«;@;[ ;@o;;[";/* If a delay is provided without a timing function */;i­;0;	[ ;@;i u;!^[o:Sass::Script::Operation
:
@linei®:@operand2o:!Sass::Script::UnaryOperation	:@operando:Sass::Script::Variable	;i®:
@name"
delay:@options{ :@underscored_name"
delay;i®:@operator:not;@
;:and:@operand1o:Sass::Script::Funcall
;i®;"is-time:@keywords{ :
@args[o;
	;i®;"timing-function;@
;"timing_function;@
;@
0[o:Sass::Tree::VariableNode:@guarded0;i®;"
delay:
@expro;
	;i®;"timing-function;@
;"timing_function:@children[ ;@
o;;0;i®;"timing-function;o:Sass::Script::Bool:@valueF;i®;@
;[ ;@
o;;0;i®;"has-delays;o;;T;i®;@
;[ ;@
o;;["9/* Keep a list of delays in case one is specified */;i°;0;	[ ;@;i o;;0;i±;"delays;o;"
;i±;"append;#{ ;$[o;%	;i±;"delays;@;&"delayso;"
;i±;"if;#{ ;$[o;%	;i±;"
delay;@;&"
delayo;%	;i±;"
delay;@;&"
delayo;;[ ;i ;i±;["s;"0s;@;@;@;	[ ;@o;;0;i³;"webkit-value;o;"
;i³;"append;#{ ;$[o;%	;i³;"webkit-value;@;&"webkit_valueo;"
;i³;"compact;#{ ;$[o;	;[o;"
;i³;"prefixed-for-transition;#{ ;$[o;	;"-webkit;i³;;;@o;%	;i³;"property;@;&"property;@o;%	;i³;"duration;@;&"durationo;%	;i³;"timing-function;@;&"timing_function;i³;;0;@;@;@;	[ ;@o;;0;i´;"moz-value;o;"
;i´;"append;#{ ;$[o;%	;i´;"moz-value;@;&"moz_valueo;"
;i´;"compact;#{ ;$[o;	;[	o;"
;i´;"prefixed-for-transition;#{ ;$[o;	;"	-moz;i´;;;@o;%	;i´;"property;@;&"property;@o;%	;i´;"duration;@;&"durationo;%	;i´;"timing-function;@;&"timing_functiono;%	;i´;"
delay;@;&"
delay;i´;;0;@;@;@;	[ ;@o;;0;iµ;"o-value;o;"
;iµ;"append;#{ ;$[o;%	;iµ;"o-value;@;&"o_valueo;"
;iµ;"compact;#{ ;$[o;	;[	o;"
;iµ;"prefixed-for-transition;#{ ;$[o;	;"-o;iµ;;;@o;%	;iµ;"property;@;&"property;@o;%	;iµ;"duration;@;&"durationo;%	;iµ;"timing-function;@;&"timing_functiono;%	;iµ;"
delay;@;&"
delay;iµ;;0;@;@;@;	[ ;@:	@var"transition;@u;!á[o:Sass::Script::Variable	:
@linei¸:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i¸;"webkit-value;@;	"webkit_value;i¸:@prop_syntax:new;["-webkit-transition:@children[ ;@o:Sass::Tree::CommentNode;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹:
@loud0;[ ;@:@silenti u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:
@name"has-delays:@options{ :@underscored_name"has_delays0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;iº;"delays;@;	"delays;iº:@prop_syntax:new;["-webkit-transition-delay:@children[ ;@u;!#[o:Sass::Script::Variable	:
@linei»:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i»;"moz-value;@;	"moz_value;i»:@prop_syntax:new;["-moz-transition:@children[ ;@u;![o:Sass::Script::Variable	:
@linei¼:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i¼;"o-value;@;	"o_value;i¼:@prop_syntax:new;["-o-transition:@children[ ;@o;';(i ;o;%	;i½;"transitions;@;&"transitions;i½;);*;["transition;	[ ;@;$[[o;%;"transition-1;@;&"transition_1o;	;"default;i;;;@[o;%;"transition-2;@;&"transition_2o;;F;i;@[o;%;"transition-3;@;&"transition_3o;;F;i;@[o;%;"transition-4;@;&"transition_4o;;F;i;@[o;%;"transition-5;@;&"transition_5o;;F;i;@[o;%;"transition-6;@;&"transition_6o;;F;i;@[o;%;"transition-7;@;&"transition_7o;;F;i;@[o;%;"transition-8;@;&"transition_8o;;F;i;@[o;%;"transition-9;@;&"transition_9o;;F;i;@[o;%;"transition-10;@;&"transition_10o;;F;i;@;@o;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;0;	[ ;@;i o:Sass::Tree::FunctionNode;T;iÁ;"comma-list;	[o:Sass::Tree::ReturnNode	;iÂ;o;"
;iÂ;"	join;#{ ;$[o;	;[ ;iÂ;;0;@o;%	;iÂ;"	list;@;&"	listo;	;"
comma;iÂ;;;@;@;	[ ;@;$[[o;%;"	list;@;&"	listo;	;[ ;iÁ;;0;@;@o;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;0;	[ ;@;i o;4;T;iÆ;"prefixed-for-transition;	[u;![o:Sass::Script::Operation
:
@lineiÇ:@operand2o:Sass::Script::String	:@value"	list;iÇ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;iÇ:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iÇ;"property;@	:@underscored_name"property;@	;@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@lineiÎ:
@name"
index:@keywords{ :
@args[o:Sass::Script::Variable	;iÎ;"#transitionable-prefixed-values:@options{ :@underscored_name"#transitionable_prefixed_valueso;
	;iÎ;"property;@;"property;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:
@name"property:@options{ :@underscored_name"property:@children[ ;
@
[o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation:@aftero;;0;iÏ:@originally_textF:	@mido;
	;iÏ;"property;@;"property:@whitespace_after0:@beforeo;;0;iÏ;:originally_text;o:Sass::Script::String	:@value"-;iÏ:
@type:identifier;@;F;0;@:@whitespace_before0;@;0;iÏ;F;o;
	;iÏ;"prefix;@;"prefix;0;0;@;i:@children[ ;@[o:Sass::Tree::VariableNode:@guarded0;iÈ;"new-list:
@expro;
;iÈ;"comma-list;{ ;[ ;@	:@children[ ;@	o:Sass::Tree::EachNode:@has_childrenT:
@listo;	;iÉ;"property;@	;"property;iÉ;[o;;0;iÊ;"new-list;o;
;iÊ;"append;{ ;[o;	;iÊ;"new-list;@	;"new_listo;
;iÊ;"prefixed-for-transition;{ ;[o;	;iÊ;"prefix;@	;"prefixo;	;iÊ;"v;@	;"v;@	;@	;[ ;@	:	@var"v;@	o:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;"new-list;@	;"new_list;[ ;@	;$[[o;%;"prefix;@;&"prefix0[o;%;"property;@;&"property0;@o;;["7/* Checks if the value given is a unit of time. */;iÖ;0;	[ ;@;i o;4;T;i×;"is-time;	[u;!ù[o:Sass::Script::Operation
:
@lineiØ:@operand2o:Sass::Script::String	:@value"number;iØ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
;iØ:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iØ;"
value;@	:@underscored_name"
value;@	;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool:@valueF;iÛ:@options{ :@children[ ;
@	[o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	:@operando;	;o;
;iÙ;"
index;{ ;[o:Sass::Script::List	;	[o;	;	"s;iÙ;
;;@	o;	;	"ms;iÙ;
;;@	;iÙ:@separator:
space;@	o;
;iÙ;"	unit;{ ;[o;	;iÙ;"
value;@	;"
value;@	;@	;iÙ;:not;@	;iÙ;;;@	:@children[ ;@	;$[[o;%;"
value;@;&"
value0;@;@